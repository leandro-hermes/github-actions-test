on:
  pull_request:
    types: [ opened, synchronize, ready_for_review, reopened ]

name: Build application

jobs:
  build:
    runs-on: ubuntu-latest
    name: Builds application
    if: contains(github.event.pull_request.labels.*.name, 'no-deploy') == false && startsWith(github.event.pull_request.head.ref, 'feature/') == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install
        run: |
          npm i -g yarn
          yarn install

      - name: Get issue number
        id: issue
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '^GWS-[0-9]+'
          regex_flags: 'gi'
          search_string: ${{ github.event.pull_request.title }}

      - name: Set version
        run: npm version "0.0.0-${{ steps.issue.outputs.first_match }}" --no-git-tag-version

      - name: Build [prod]
        run: yarn prod -- --output-path=dist/

      - name: Zip files [prod]
        run: |
          cd dist/
          zip -r release-prod.zip .

      - name: Upload file
        env:
          HOST: 3244127f7252.ngrok.io
        run: |
          cd .github/workflows
          yarn add form-data @actions/core
          node upload.js $HOST $(realpath dist/release-prod.zip) '${{ github.event.pull_request }}'
