on:
  push:
    branches:
      - release

name: Generate release

jobs:
  generate-release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      release-info: ${{ steps.get-release.outputs }}
    steps:
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: patch

      - name: Gets latest created release info
        id: get-release
        uses: jossef/action-latest-release-info@v1.1.0

      - name: Check output parameters
        run: |
          echo ${{ format('Tag: release-on-push={0} \| latest-release={1}', steps.release.outputs.tag_name, steps.get-release.outputs.tag_name) }}
          echo ${{ format('Release: release-on-push={0} \| latest-release={1}', steps.release.outputs.version, steps.get-release.outputs.name) }}

      - name: Need to stop?
        uses: andymckay/cancel-action@0.2
        if: ${{ !steps.release.outputs.version }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install
        run: |
          npm i -g yarn
          yarn install
          
  build-for-local-usage:
    runs-on: ubuntu-latest
    needs: [generate-release]
    name: 'Build assets for local usage'
    steps:
      - name: Build
        run: |
          echo "Setting environment to local..."
          cp src/environments/environment.ts src/environments/environment.prod.ts
          echo "Building..."
          yarn prod --output-path=dist/local
          echo "Restoring environment..."
          git checkout src/environments/environment.prod.ts

      - name: Zip files
        run: |
          cd dist/local
          zip -r ../release-local.zip .
          
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.generate-release.outputs.release-info.upload_url }}
          asset_path: ./dist/release-local.zip
          asset_name: release-local.zip
          asset_content_type: application/zip
          
  build-for-production-usage:
    runs-on: ubuntu-latest
    needs: [generate-release]
    name: 'Build assets for production usage'
    steps:
      - name: Build
        run: yarn prod

      - name: Zip files
        run: |
          cd dist/test
          zip -r ../release-prod.zip .
          
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.generate-release.outputs.release-info.upload_url }}
          asset_path: ./dist/release-prod.zip
          asset_name: release-prod.zip
          asset_content_type: application/zip
