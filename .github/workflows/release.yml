on:
  push:
    tags:
      - 'v*'

name: Generate release

jobs:
  release:
    name: Generate release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      release-upload-url: ${{ steps.create_release.outputs.upload_url }}
      new_version: ${{ steps.version.outputs.first_match }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: New tag ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Get issue number
        id: version
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '\d+\.\d+\.\d+'
          regex_flags: 'gi'
          search_string: ${{ github.ref }}
        
  build:
    runs-on: ubuntu-latest
    needs: [release]
    name: Build assets and upload
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set version
        run: npm version ${{ needs.release.outputs.new_version }} --no-git-tag-version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install
        run: |
          npm i -g yarn
          yarn install
          
      - name: Build [local]
        run: |
          echo "Setting environment to local..."
          cp src/environments/environment.ts src/environments/environment.prod.ts
          echo "Building..."
          yarn prod --output-path=dist/local
          echo "Restoring environment..."
          git checkout src/environments/environment.prod.ts

      - name: Zip files [local]
        run: |
          cd dist/local
          zip -r ../release-local.zip .
          
      - name: Upload release asset [local]
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release-upload-url }}
          asset_path: ./dist/release-local.zip
          asset_name: release-local.zip
          asset_content_type: application/zip
          
      - name: Build [prod]
        run: yarn prod

      - name: Zip files [prod]
        run: |
          cd dist/test
          zip -r ../release-prod.zip .
          
      - name: Upload release asset [prod]
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release-upload-url }}
          asset_path: ./dist/release-prod.zip
          asset_name: release-prod.zip
          asset_content_type: application/zip
