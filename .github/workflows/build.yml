# This is a basic workflow to help you get started with Actions

name: Build release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ release ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: |
          npm i -g yarn
          yarn install
        
      - name: Bump version
        uses: oleksiyrudenko/gha-git-credentials@v1
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          actor: '$GITHUB_ACTOR'
          name: 'GitHub Actions'
      - run: |
          npm version patch
          git push --follow-tags

      - name: Build
        run: |
          npm run prod
          cd dist/test
          zip -r release.zip .
          
      - name: Get current version
        id: version
        uses: pchynoweth/action-get-npm-version@master
      
      - name: Get new tag
        run: |
          NEW_TAG=v${{ steps.version.outputs.version }}
          echo "::set-env name=newTag::$NEW_TAG"
        
      - name: Get Previous Tag
        run: |
          PREV_TAG=$(git describe --abbrev=0 --tags "v${{ env.newTag }}^")
          echo "::set-env name=baseRef::$PREV_TAG"
          
      - name: Generate changelog
        id: generate_changelog
        uses: nblagoev/pull-release-notes-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          base-ref: ${{ env.baseRef }}
          head-ref: ${{ env.newTag }}

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{ steps.version.outputs.version }}
#           release_name: Release v${{ steps.version.outputs.version }}
#           draft: false
#           prerelease: false
          
#       - name: Upload Release Asset
#         id: upload-release-asset 
#         uses: actions/upload-release-asset@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: ./dist/test/release.zip
#           asset_name: ${{ github.repository }}.zip
#           asset_content_type: application/zip

